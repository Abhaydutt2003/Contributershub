#include<bits/stdc++.h>
using namespace std;
int  presedence(char c)
{
    if(c=='^')
    {
        return 3;
    }
    else if(c=='*' || c=='/')
    {
        return 2;
    }
    else if(c=='+' || c=='-')
    {
        return 1;
    }
    else
    {
        return -1;
    }
}
string infixtopostfix(string s)
{
    stack<char>st;
    string res;
 
    for(int x=0;x<s.length();x++)
    {
        if((s[x]>='a' && s[x]<='z') ||(s[x]>='A' && s[x]<='Z'))
        {
            res+=s[x];
        }
        else if(s[x]=='(')
        {
            st.push(s[x]);
        }
        else if(s[x]==')')
        {
            while(!st.empty() && st.top()!='(')
            {
                res+=st.top();
                st.pop();
            }
          if(!st.empty())
          {
            st.pop();
          }
        }
        else
          {  
           while(!st.empty()  && presedence(st.top())<presedence(s[x]))
           {
            res+=st.top();
            st.pop();  
           }
           st.push(s[x]);
        }
    }
        while(!st.empty())
        {
            res+=st.top();
            st.pop();
        }
    return res;

}

int main()
{
  cout<<infixtopostfix("(A+B)*(C*D-E)*F/G")<<endl;
}
